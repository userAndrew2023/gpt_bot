import enum
import openai
import pymysql as pymysql
import telebot
from mysql.connector import connect
from telebot import types
from config import *

token = TOKEN
bot = telebot.TeleBot(TOKEN)
engine = "text-davinci-003"

users = {}
words = {}
openai.api_key = GPT_API_KEY


class Actions(enum.Enum):
    ACTION_GENERATE = 0
    ACTION_REWRITE = 1


@bot.message_handler(commands=['start'])
def start(message: types.Message):

    con = pymysql.connect(host="localhost", user="root", password="1234", database="back")

    with con.cursor() as cursor:
        cursor.execute(f"SELECT * FROM `bots` WHERE name = '{bot.get_me().username}'")
        id = cursor.fetchall()[0]
        cursor.execute(f"INSERT INTO `messages` (bot_id, username, text) "
                       f"VALUES ('{id[0]}', '{message.from_user.username}', '{message.text}')")
        cursor.execute(f"UPDATE `bots` SET `messages` = '{int(id[3]) + 1}' WHERE (`id` = '{id[0]}');")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    items = [
        types.KeyboardButton("üòé –ê–∫–∫–∞—É–Ω—Ç"),
        types.KeyboardButton("üîÆ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞"),
        types.KeyboardButton("‚Ñπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"),
        types.KeyboardButton("‚úè –†–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞"),
        types.KeyboardButton("üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã"),
        types.KeyboardButton("üîë –ü–æ–¥–ø–∏—Å–∫–∞")
    ]

    markup.add(*items, row_width=2)
    bot.send_message(chat_id=message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç 'Dobby.GPT'.  "
                                                   "–Ø —É–º–µ—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –∏ –æ–±–ª–∞–¥–∞—é"
                                                   " —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ",
                     reply_markup=markup)

    users[message.chat.id] = None


@bot.message_handler()
def message_handler(message):
    if message.text == "üîÆ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
        users[message.chat.id] = Actions.ACTION_GENERATE
    elif message.text == "‚úè –†–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç", reply_markup=None)
        users[message.chat.id] = Actions.ACTION_REWRITE
    elif message.text == "üòé –ê–∫–∫–∞—É–Ω—Ç":
        bot.send_message(message.chat.id, "ID: " + str(message.chat.id))
    elif message.text == "‚Ñπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
        bot.send_message(message.chat.id, """Dobby.GPT

üî• –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: 
                
üòé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ê–∫–∫–∞—É–Ω—Ç¬ª

üîÆ –ß—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞¬ª. 
–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã: 
¬´–ø—Ä–æ–±–µ–ª¬ª
¬´enter¬ª
¬´–∑–∞–ø—è—Ç–∞—è¬ª
¬´—Ç–æ—á–∫–∞¬ª
¬´–æ–±—Ä–∞—Ç–Ω—ã–π –∏–ª–∏ –ø—Ä—è–º–æ–π —Å–ª—ç—à¬ª

‚úèÔ∏è –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ä–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–†–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞¬ª. 
–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–µ –±–æ–ª–µ–µ 500 —Å–ª–æ–≤.

üì±–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª

üîë –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–ø–∏—Å–∫–∞¬ª

–ü–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞ Dobby.GPT –ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É info@dobby.plus

–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ü´°""")
    elif message.text == "üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Dobby.GPT:\n+7 800 777-08-35\ninfo@dobby.plus")
    elif message.text == "üîë –ü–æ–¥–ø–∏—Å–∫–∞":
        bot.send_message(message.chat.id, "–ú–∞–π: –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
    else:
        if users.get(message.chat.id, False) is False:
            bot.send_message(chat_id=message.chat.id, text="–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
            users[message.chat.id] = None
        elif users[message.chat.id] == Actions.ACTION_GENERATE:
            if len(message.text.split()) > 100:
                bot.send_message(chat_id=message.chat.id, text="–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–ª–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–µ")
            else:
                bot.send_message(message.chat.id, text="–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞"
                                                       " –¥–æ 60 —Å–µ–∫—É–Ω–¥")
                messages = [{"role": "user", "content": f"–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏–∑ —Å–ª–æ–≤: {message.text}"}]
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    max_tokens=1000,
                    temperature=1.2,
                    messages=messages
                )
                bot.send_message(chat_id=message.chat.id, text=response["choices"][0]['message']['content'])
                s = open("log.txt", "a")
                s.write(str(message.chat.id) + " - " + message.text + " - " + str(Actions.ACTION_REWRITE) + "\n")
                s.close()

        elif users[message.chat.id] == Actions.ACTION_REWRITE:
            if len(message.text.split()) > 500:
                bot.send_message(chat_id=message.chat.id, text="–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–ª–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–µ")
            else:
                bot.send_message(message.chat.id, text="–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞"
                                                       " –¥–æ 60 —Å–µ–∫—É–Ω–¥")
                messages = [{"role": "user", "content": f"–ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ —Å–ª–æ–≤ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏: "
                                                        f"{message.text}"}]
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    max_tokens=1000,
                    temperature=1.2,
                    messages=messages
                )
                bot.send_message(chat_id=message.chat.id, text=response["choices"][0]['message']['content'])
                s = open("log.txt", "a")
                s.write(str(message.chat.id) + " - " + message.text + " - " + str(Actions.ACTION_REWRITE) + "\n")
                s.close()
        else:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å")


if __name__ == "__main__":
    bot.infinity_polling()
